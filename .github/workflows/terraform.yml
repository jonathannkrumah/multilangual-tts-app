name: Deploy TTS App

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:

  # Step 1: Bootstrap backend

  bootstrap-backend:
    runs-on: ubuntu-latest

     
  # Deploy main infrastructure

  deploy:
    runs-on: ubuntu-latest
    needs: [bootstrap-backend]
    if: always() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::164229328614:role/GitHubTerraformRole
          aws-region: us-east-1

      - name: Terraform Init (main infrastructure with backend)
        run: terraform -chdir=infrastructure init -reconfigure

      - name: Terraform Validate
        run: terraform -chdir=infrastructure validate

      - name: Terraform Plan
        run: terraform -chdir=infrastructure plan -out=tfplan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform -chdir=infrastructure apply -input=false -auto-approve tfplan

      # Frontend deployment
   
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend/tts-frontend

      - name: Set React environment variables
        run: |
          API_URL=$(terraform -chdir=$GITHUB_WORKSPACE/infrastructure/app output -raw tts_api_invoke_url)
          echo "REACT_APP_TTS_API_URL=$API_URL" >> $GITHUB_ENV
          echo "REACT_APP_TTS_API_URL=$API_URL" > .env
        working-directory: ./frontend/tts-frontend

      - name: Build React frontend
        run: npm run build
        working-directory: ./frontend/tts-frontend

      - name: Sync build to S3
        run: aws s3 sync build/ s3://tts-app-frontend --delete
        working-directory: ./frontend/tts-frontend
        env:
          AWS_DEFAULT_REGION: us-east-1

      - name: Get CloudFront Distribution ID
        id: get_cf_id
        run: |
          CF_ID=$(terraform -chdir=infrastructure/app output -raw frontend_cloudfront_id || echo "")
          echo "CF_ID=$CF_ID" >> $GITHUB_ENV

      - name: Invalidate CloudFront cache
        if: ${{ env.CF_ID != '' }}
        run: aws cloudfront create-invalidation --distribution-id $CF_ID --paths "/*"
        env:
          AWS_DEFAULT_REGION: us-east-1
